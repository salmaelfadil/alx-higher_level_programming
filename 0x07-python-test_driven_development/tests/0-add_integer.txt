===================================
How to Use doctest 0-add_integer.py
===================================

This module defines an integer addition function `add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

Regular addition
::  
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

Negative integer
::

    >>> add_integer(2, -3)
    -1

float values - casts floats into ints
::
    
    >>> add_integer(3.0, 3.0)
    6

::

    >>> add_integer(2.45, 3.1)
    5

optional second argument, defaults to 98
::
    >>> add_integer(5)
    103


non-number arguments
::
    >>> add_integer('s', 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

::
    >>> add_integer(1, "python")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer


::
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

NaN numbers

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
